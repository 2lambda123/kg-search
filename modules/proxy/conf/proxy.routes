# proxy service
  GET     /kg_labels/*proxyUrl      proxy.controllers.SearchProxy.labels(proxyUrl:String)
  OPTIONS /kg_labels/*proxyUrl      proxy.controllers.SearchProxy.labelsOptions(proxyUrl:String)

  ###
  #  summary: ES query proxy with smart handling of nested fields query
  #  parameters:
  #  - in: header
  #    name: Authorization
  #    description: Authorization token
  #    required: false
  #    type: string
  ###
  GET     /search/*indexWithProxyUrl      proxy.controllers.SearchProxy.proxySearch(indexWithProxyUrl:String)
  ###
  #  summary: ES query proxy with smart handling of nested fields query
  #  parameters:
  #  - in: header
  #    name: Authorization
  #    description: Authorization token
  #    required: false
  #    type: string
  ###
  POST    /search/*indexWithProxyUrl      proxy.controllers.SearchProxy.proxySearch(indexWithProxyUrl:String)

  ###
  #  summary: ES query proxy without any query manipulation
  #  parameters:
  #  - in: header
  #    name: Authorization
  #    description: Authorization token
  #    required: false
  #    type: string
  ###
  GET     /default/*indexWithProxyUrl         proxy.controllers.SearchProxy.proxy(indexWithProxyUrl:String)
  ###
  #  summary: ES query proxy without any query manipulation
  #  parameters:
  #  - in: header
  #    name: Authorization
  #    description: Authorization token
  #    required: false
  #    type: string
  ###
  POST    /default/*indexWithProxyUrl         proxy.controllers.SearchProxy.proxy(indexWithProxyUrl:String)

  OPTIONS   /search/:index/*proxyUrl         proxy.controllers.SearchProxy.proxyOptions(index:String, proxyUrl:String)
  OPTIONS   /default/:index/*proxyUrl         proxy.controllers.SearchProxy.proxyOptions(index:String, proxyUrl:String)

# Export service
  GET     /export                         proxy.controllers.ExportContainerController.exportContainer(container: String, filter: Option[String])